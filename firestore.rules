
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      // User is an admin if their own user document has role 'admin'.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isFaculty() {
        // User is faculty if their own user document has role 'faculty'.
        return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'faculty';
    }

    function isOwner(userId) {
      // User is the owner of the document.
      return request.auth != null && request.auth.uid == userId;
    }

    function facultyCanAccessStudent(studentData) {
        // Check if the student's branch is in the faculty's list of assigned branches.
        let facultyData = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
        return studentData.role == 'student' && studentData.branch in facultyData.branch;
    }

    match /users/{userId} {
      // ANYONE can create a user document (i.e., register). Status is 'pending' by default.
      allow create: if request.auth != null;

      // - Users can read their own profile.
      // - Admins can read any user profile.
      // - Faculty can read profiles of students in their assigned branches.
      allow get: if isOwner(userId) || isAdmin() || (isFaculty() && facultyCanAccessStudent(resource.data));
                   
      // - Admins can list all users.
      // - Faculty can list students who are in their assigned branch(es) for the approval page.
      allow list: if isAdmin() || (isFaculty() && request.query.branch in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.branch);

      // - Users can update their own profile.
      // - Admins can update any user profile (for approval, role changes, etc.).
      // - Faculty can update student profiles in their branch (for approval).
      allow update: if isOwner(userId) || isAdmin() || (isFaculty() && facultyCanAccessStudent(request.resource.data));

      // Only the owner or an admin can delete a user record.
      allow delete: if isOwner(userId) || isAdmin();
    }

    match /branches/{branchId} {
        // ANYONE can view the list of branches (e.g., for registration dropdowns).
        allow read: if true;
        // ONLY ADMINS can create, update, or delete branches.
        allow write: if isAdmin();
    }
  }
}
