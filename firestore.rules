rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAdmin() {
      // Checks if the requesting user has the 'admin' role in their own user document.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      // Checks if the requesting user is the owner of the document.
      return request.auth != null && request.auth.uid == userId;
    }

    // --- Rules for Users ---
    match /users/{userId} {
      // Any user can create their own user document during registration.
      allow create: if request.auth != null;

      // Users can read their own profile. Admins can read any profile.
      allow get: if isOwner(userId) || isAdmin();
      
      // Admins can list all users for management pages.
      allow list: if isAdmin();
                   
      // Users can update their own profile. Admins can update any profile.
      allow update: if isOwner(userId) || isAdmin();

      // Only the owner or an admin can delete a user account.
      allow delete: if isOwner(userId) || isAdmin();
    }

    // --- Rules for Branches ---
    match /branches/{branchId} {
      // Allow public read access for branches, as this is needed for the registration page dropdown.
      // This is safe as branch names are not sensitive data.
      allow read: if true;
      
      // Only admins can create, update, or delete branches.
      allow write: if isAdmin();
    }
  }
}
