rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function getRequestingUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isAdmin() {
      return isAuth() && getRequestingUserData().role == 'admin';
    }

    function isFaculty() {
      return isAuth() && getRequestingUserData().role == 'faculty';
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isStudent(userId) {
        return isAuth() && get(/databases/$(database)/documents/users/$(userId)).data.role == 'student';
    }

    // --- Collection Rules ---

    // Users Collection
    match /users/{userId} {
      // Create: Anyone can create their own user document during registration.
      allow create: if isOwner(userId);
      
      // Get: Users can read their own profile. Admins can read any profile. 
      // Faculty can read profiles of students in their assigned branches.
      allow get: if isOwner(userId) || isAdmin() || (isFaculty() && isStudent(userId) && get(/databases/$(database)/documents/users/$(userId)).data.branch in getRequestingUserData().branch);
      
      // List: Only Admins and Faculty can list users. This is for management pages.
      allow list: if isAdmin() || isFaculty();

      // Update: Users can update their own profile. Admins can update any profile.
      // Faculty can update student profiles within their branch (for approvals).
      allow update: if isOwner(userId) || isAdmin() || (isFaculty() && isStudent(userId) && get(/databases/$(database)/documents/users/$(userId)).data.branch in getRequestingUserData().branch);

      // Delete: Only admins can delete users.
      allow delete: if isAdmin();
    }

    // Branches Collection
    match /branches/{branchId} {
      // Read: Anyone can read the list of branches (needed for registration page).
      allow get, list: if true;
      // Write: Only admins can create or modify branches.
      allow write: if isAdmin();
    }
    
    // Timetables Collection
    match /timetables/{timetableId} {
      // Read: Any authenticated user can read any timetable.
      // (Permissions are controlled by knowing the timetableId, which is branch_semester).
      allow read: if isAuth();
      
      // Write: Admins and Faculty can create, update, and delete timetables.
      allow write: if isAdmin() || isFaculty();
    }
  }
}
