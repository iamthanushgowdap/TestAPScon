rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isStudent() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isFaculty() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'faculty';
    }
    
    function isApproved() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.status == 'approved';
    }

    match /users/{userId} {
      allow create: if isSignedIn();
      allow get: if isSignedIn();
      allow update: if isSignedIn() && request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
      allow list: if isAdmin() || isFaculty();
    }
    
    match /branches/{branchId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    match /timetables/{timetableId} {
      allow read: if (isStudent() && isApproved() && resource.data.branch == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.branch && resource.data.semester == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.semester) || isFaculty() || isAdmin();
      allow write: if isFaculty() || isAdmin();
    }
  }
}
