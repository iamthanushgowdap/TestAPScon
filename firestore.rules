
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function getRequestingUserData() {
      return isAuth() ? getUserData(request.auth.uid) : null;
    }

    function isAdmin() {
      return isAuth() && getRequestingUserData().role == 'admin';
    }

    function isFaculty() {
      return isAuth() && getRequestingUserData().role == 'faculty';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- Collection Rules ---

    // Users Collection
    match /users/{userId} {
      // Create: Anyone can create their own user document (for registration).
      allow create: if isAuth() && isOwner(userId);
      
      // Read: Users can read their own profile. Admins can read any profile. 
      // Faculty can read profiles of students in their assigned branches.
      allow get: if isAuth() && (isOwner(userId) || isAdmin() || 
                 (isFaculty() && getUserData(userId).role == 'student' && getUserData(userId).branch in getRequestingUserData().branch));
      
      // List: Admins and faculty can list users. Unauthenticated users can query by email or USN for registration checks.
      allow list: if isAdmin() || isFaculty() || (request.query.keys.hasOnly(['email']) || request.query.keys.hasOnly(['usn']));

      // Write: Users can update their own profile. Admins can update any profile.
      // Faculty can update student profiles within their branch (for approvals).
      allow update: if (isAuth() && isOwner(userId)) || isAdmin() || 
                    (isFaculty() && getUserData(userId).role == 'student' && getUserData(userId).branch in getRequestingUserData().branch);

      // Delete: Only admins can delete users.
      allow delete: if isAdmin();
    }

    // Branches Collection
    match /branches/{branchId} {
      // Read: Anyone can read the list of branches (needed for registration page).
      allow read: if true;
      // Write: Only admins can create or modify branches.
      allow write: if isAdmin();
    }
    
    // Timetables Collection
    match /timetables/{timetableId} {
      // Read: Any authenticated user can read any timetable.
      // (Permissions are controlled by knowing the timetableId, which is branch_semester).
      allow read: if isAuth();
      
      // Write: Admins and Faculty can create, update, and delete timetables.
      allow write: if isAdmin() || isFaculty();
    }
  }
}
